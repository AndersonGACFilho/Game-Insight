version: "3.9"
services:
  postgres:
    image: postgres:15-alpine
    container_name: gi-postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: game_insight
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    image: bitnami/zookeeper:3.9
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.7
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    ports:
      - "9092:9092"

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.98.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./observability/otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"
      - "4318:4318"

  gateway:
    build: ./services/gateway
    environment:
      - PORT=8080
      - LOG_LEVEL=info
      - KAFKA_BROKERS=kafka:9092
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DATABASE_URL=postgres://user:pass@postgres:5432/game_insight?sslmode=disable
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      - postgres
      - kafka
      - rabbitmq
    ports:
      - "8080:8080"

  user-service:
    build: ./services/user-service
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DB_URL=jdbc:postgresql://postgres:5432/game_insight
      - DB_USER=user
      - DB_PASSWORD=pass
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      - postgres
    ports:
      - "8081:8080"

  game-service:
    build: ./services/game-service
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DB_URL=jdbc:postgresql://postgres:5432/game_insight
      - DB_USER=user
      - DB_PASSWORD=pass
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      - postgres
    ports:
      - "8082:8080"

  reco-service:
    build: ./services/reco-service
    environment:
      - PORT=8000
      - DATABASE_URL=postgres://user:pass@postgres:5432/game_insight?sslmode=disable
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      - postgres
    ports:
      - "8000:8000"

  igdb-etl:
    build: ./services/igdb-etl
    environment:
      - DATABASE_URL=postgres://user:pass@postgres:5432/game_insight?sslmode=disable
      - IGDB_CLIENT_ID=${IGDB_CLIENT_ID:-replace_me}
      - IGDB_CLIENT_SECRET=${IGDB_CLIENT_SECRET:-replace_me}
      - IGDB_POLL_INTERVAL_SECONDS=900
      - IGDB_BATCH_SIZE=100
      - LOG_LEVEL=info
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  pgdata:
